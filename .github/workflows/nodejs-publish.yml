name: Nodejs Publish

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

defaults:
  run:
    working-directory: packages/nodejs

env:
  WORKING_DIRECTORY: packages/nodejs

permissions:
  contents: write
  id-token: write

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'packages/nodejs/package.json'
      - '.github/workflows/nodejs-build-common.yml'
      - '.github/workflows/nodejs-publish.yml'

jobs:
  check_if_need_release:
    name: nodejs-publish-version-check
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.compare_version.outputs.release }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: yarn

      - name: Install dependencies
        run: yarn install --immutable

      - name: Compare version
        id: compare_version
        run: |
          new_version=$(node -p "require('./package.json').version")
          versions=$(npm view @pleisto/node-flappy versions)
          echo "current version: $new_version"
          echo $versions
          if [ -z "${versions[@]}" ]; then
            echo "version is empty"
            exit 1
          fi

          if [[ "${versions[@]}" =~ "${new_version}" ]]; then
            echo "Version is exist."
            echo "release=no" >> "$GITHUB_OUTPUT"
          else
            echo "Version is not exist."
            echo "release=yes" >> "$GITHUB_OUTPUT"
          fi
  build:
    name: nodejs-publish-build
    needs: [check_if_need_release]
    if: needs.check_if_need_release.outputs.release == 'yes'
    uses: ./.github/workflows/nodejs-build-common.yml
  publish:
    name: nodejs-publish-release
    environment:
      name: Npm
    needs: [check_if_need_release, build]
    if: needs.check_if_need_release.outputs.release == 'yes'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: yarn

      - name: Install dependencies
        run: yarn install --immutable

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: nodejs-build
          path: ${{env.WORKING_DIRECTORY}}/dist
      - name: Publish
        run: |
          if node -p "require('./package.json').version" | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" >> ~/.npmrc
            npm publish --access public
          elif node -p "require('./package.json').version" | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" >> ~/.npmrc
            npm publish --tag next --access public
          else
            echo "Not a release, skipping publish"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
