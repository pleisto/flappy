name: Nodejs Bindings Publish

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

defaults:
  run:
    working-directory: packages/rust-core/nodejs

env:
  WORKING_DIRECTORY: packages/rust-core/nodejs

permissions:
  contents: write
  id-token: write

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'packages/rust-core/nodejs/package.json'
      - '.github/workflows/nodejs-bindings-build-common.yml'
      - '.github/workflows/nodejs-bindings-publish.yml'

jobs:
  check_if_need_release:
    name: nodejs-bindings-publish-version-check
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.compare_version.outputs.result }}
    steps:
      - uses: actions/checkout@v4

      - name: Compare version
        uses: actions/github-script@v6
        id: compare_version
        with:
          result-encoding: string
          script: |
            const execUnwrap = async (cmd, args) => {
              let output = ""
              const options = {
                listeners: {
                  stdout: (data) => {
                    output += data.toString();
                  }
                }
              }
              const result = await exec.exec(cmd, args, options)
              if (result !== 0) throw new Error("error")
              return output
            }

            const versions = JSON.parse(await execUnwrap('npm', ['view', '@pleisto/flappy-nodejs-bindings', 'versions', '--json']))
            console.log('versions', versions)

            const new_version = require('./packages/rust-core/nodejs/package.json').version
            console.log('new_version', new_version)

            if (versions.includes(new_version)) {
              console.log('version is exist')
              return "no"
            } else {
              console.log('version is not exist')
              return "yes"
            }

  build:
    name: nodejs-bindings-publish-build
    needs: [check_if_need_release]
    if: needs.check_if_need_release.outputs.release == 'yes'
    uses: ./.github/workflows/nodejs-bindings-build-common.yml
  publish:
    name: nodejs-bindings-publish-release
    needs: [check_if_need_release, build]
    if: needs.check_if_need_release.outputs.release == 'yes'
    runs-on: ubuntu-latest
    environment:
      name: Npm
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: yarn

      - name: Install dependencies
        run: yarn install --immutable
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{env.WORKING_DIRECTORY}}/artifacts
      - name: Move artifacts
        run: yarn artifacts
      - name: List packages
        run: ls -R ./npm
        shell: bash
      - name: Publish
        run: |
          if node -p "require('./package.json').version" | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" >> ~/.npmrc
            npm publish --access public
          elif node -p "require('./package.json').version" | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" >> ~/.npmrc
            npm publish --tag next --access public
          else
            echo "Not a release, skipping publish"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
