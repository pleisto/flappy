name: Kotlin Publish

on:
  workflow_dispatch:
    inputs:
      type:
        type: choice
        description: 'type'
        options:
          - all
          - github-package-only
          - maven-central-only
  push:
    branches: [main]
    paths:
      - 'packages/kotlin/flappy/gradle.properties'
      - '.github/workflows/kotlin-publish.yml'

defaults:
  run:
    working-directory: packages/kotlin

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  check_if_need_release:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.compare_version.outputs.release }}
    steps:
      - uses: actions/checkout@v4

      - name: Compare version
        id: compare_version
        run: |
          new_version=$(echo -n $(awk -F'=' '/version/ {print $2}' flappy/gradle.properties))
          versions=$(curl https://repo1.maven.org/maven2/com/pleisto/flappy/maven-metadata.xml | awk -F'[><]' '/<version>/{print $3}')
          echo "current version: $new_version"
          echo $versions
          if [ -z "${versions[@]}" ]; then
            echo "version is empty"
            exit 1
          fi

          if [[ "${versions[@]}" =~ "${new_version}" ]]; then
            echo "Version is exist."
            echo "release=no" >> "$GITHUB_OUTPUT"
          else
            echo "Version is not exist."
            echo "release=yes" >> "$GITHUB_OUTPUT"
          fi

  publish:
    runs-on: ubuntu-latest
    name: Publish Maven
    timeout-minutes: 30
    needs: [check_if_need_release]
    if: needs.check_if_need_release.outputs.release == 'yes'
    environment:
      name: Maven
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.9.0
        with:
          gradle-version: wrapper

      - name: Publish document
        run: ./gradlew dokkaHtml

      - name: Publish to maven central
        run: ./gradlew publishAllPublicationsToMavenCentral --no-configuration-cache
        if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.type == 'all' || github.event.inputs.type == 'maven-central-only' }}
        env:
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEY}}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYPASSWORD}}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{vars.ORG_GRADLE_PROJECT_MAVENCENTRALUSERNAME}}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{secrets.ORG_GRADLE_PROJECT_MAVENCENTRALPASSWORD}}

      - name: Publish to github packages
        run: ./gradlew publishAllPublicationsToGitHubPackageRepository
        if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.type == 'all' || github.event.inputs.type == 'github-package-only' }}
        env:
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEY}}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYPASSWORD}}
          ORG_GRADLE_PROJECT_GithubPackagesUsername: ${{vars.ORG_GRADLE_PROJECT_GITHUBPACKAGESUSERNAME}}
          ORG_GRADLE_PROJECT_GithubPackagesPassword: ${{secrets.ORG_GRADLE_PROJECT_GITHUBPACKAGESPASSWORD}}

