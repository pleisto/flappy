name: CSharp Nuget Test

on:
  workflow_dispatch:
  push:
    paths:
      - 'examples/csharp/**/*'
      - 'packages/csharp/**/*'
      - '.github/workflows/csharp-test.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: packages/csharp

jobs:
  tests:
    name: ${{ matrix.os }} - dotnet-${{ matrix.dotnet-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          #- windows-latest
          - macos-latest
        dotnet-version:
          - "netcoreapp3.1"
          - "net6.0"
          - "net7.0"
        
    steps:
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.os }}-cargo

      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - uses: actions/checkout@v4

      - name: build binding native
        run: |
          cd packages/rust-core/csharp
          cargo build --target-dir 

      - name: dotnet test
        env:
          OPENAI_API_KEY:
        run: |
          export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$PWD/packages/rust-core/target/debug"
          cd packages/csharp
          cp ../rust-core/target/debug/*csharp* ./Pleisto.Flappy.Test/bin/Debug/${{ matrix.dotnet-version }}/
          dotnet test -e NO_GPT_TEST=true --framework ${{ matrix.dotnet-version }}
