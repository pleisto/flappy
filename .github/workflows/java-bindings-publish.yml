name: Java Bindings Publish

on:
  workflow_dispatch:
  push:

defaults:
  run:
    working-directory: packages/rust-core/java

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  stage-snapshot:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    environment:
      name: Maven
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            classifier: linux-x86_64
          - os: windows-latest
            classifier: windows-x86_64
          - os: macos-latest
            classifier: osx-x86_64
          - os: macos-latest
            classifier: osx-aarch_64
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
          server-id: apache.releases.https
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          version: '23.4'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Local staging
        shell: bash
        run: |
          ./mvnw -Papache-release package verify org.sonatype.plugins:nexus-staging-maven-plugin:deploy \
            -DskipTests=true \
            -Djni.classifier=${{ matrix.classifier }} \
            -Dcargo-build.profile=release \
            -Dcargo-build.features=services-all \
            -DaltStagingDirectory=local-staging \
            -DskipRemoteStaging=true \
            -DserverId=apache.releases.https \
            -DnexusUrl=https://repository.apache.org
        env:
          MAVEN_USERNAME: ${{ vars.ORG_GRADLE_PROJECT_MAVENCENTRALUSERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALPASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYPASSWORD }}
      - name: Upload local staging directory
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.classifier }}-local-staging
          path: local-staging
          if-no-files-found: error

  deploy-staged-snapshots:
    runs-on: ubuntu-latest
    needs: [stage-snapshot]
    timeout-minutes: 30
    environment:
      name: Maven
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
          server-id: apache.releases.https
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Prepare environment variables
        run: echo "LOCAL_STAGING_DIR=$HOME/local-staging" >> $GITHUB_ENV

      - name: Download windows staging directory
        uses: actions/download-artifact@v3
        with:
          name: windows-x86_64-local-staging
          path: ~/windows-x86_64-local-staging
      - name: Download linux staging directory
        uses: actions/download-artifact@v3
        with:
          name: linux-x86_64-local-staging
          path: ~/linux-x86_64-local-staging
      - name: Download darwin staging directory
        uses: actions/download-artifact@v3
        with:
          name: osx-x86_64-local-staging
          path: ~/osx-x86_64-local-staging
      - name: Download darwin (aarch64) staging directory
        uses: actions/download-artifact@v3
        with:
          name: osx-aarch_64-local-staging
          path: ~/osx-aarch_64-local-staging

      - name: Merge staging repositories
        run: |
          bash tools/merge_local_staging.sh $LOCAL_STAGING_DIR/staging \
            ~/windows-x86_64-local-staging/staging \
            ~/linux-x86_64-local-staging/staging \
            ~/osx-x86_64-local-staging/staging \
            ~/osx-aarch_64-local-staging/staging

      - name: Deploy local staged artifacts
        run: |
          ./mvnw org.sonatype.plugins:nexus-staging-maven-plugin:deploy-staged \
            -DaltStagingDirectory=$LOCAL_STAGING_DIR \
            -DskipStagingRepositoryClose=true \
            -DserverId=apache.releases.https \
            -DnexusUrl=https://repository.apache.org
        env:
          MAVEN_USERNAME: ${{ vars.ORG_GRADLE_PROJECT_MAVENCENTRALUSERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALPASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYPASSWORD }}
