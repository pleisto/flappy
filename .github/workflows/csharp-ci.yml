name: CSharp Nuget CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  actions: read
  contents: read
  security-events: write

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'examples/csharp/**'
      - 'packages/csharp/**'
      - '.github/workflows/csharp-ci.yml'
      - '.github/workflows/codeql.yml'
      - 'templates/**'

  push:
    branches: [main]
    paths:
      - 'examples/csharp/**'
      - 'packages/csharp/**'
      - '.github/workflows/csharp-ci.yml'
      - '.github/workflows/codeql.yml'
      - 'templates/**'

jobs:
  codeql:
    name: csharp-ci-codeql
    uses: ./.github/workflows/codeql.yml
    with:
      language: csharp
      working-directory: packages/csharp

  tests:
    name: csharp-ci-test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          #- windows-latest
          #- macos-latest
        dotnet-version:
          - framework: netcoreapp3.1
            runtime: 3.1
          - framework: net6.0
            runtime: 6.0
          - framework: net7.0
            runtime: 7.0
    steps:
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version.runtime }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - uses: actions/checkout@v4

      - name: dotnet test
        run: |
          cd packages/csharp
          dotnet tool install --global dotnet-coverage
          dotnet coverage collect \
            --output-format=xml --output=coverage.xml \
            dotnet test -e NO_GPT_TEST=true --framework ${{ matrix.dotnet-version.framework }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings
          path: |
            packages/csharp/coverage.xml
          if-no-files-found: error

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.dotnet-version.runtime == 7.0
        with:
          working-directory: ./packages/csharp
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          flags: csharp
          name: csharp-upload
          fail_ci_if_error: true
          verbose: true
