import { type ZodType as z } from './flappy-type'
import { type SynthesizedFunction } from './synthesized-function'
import { type InvokeFunction } from './invoke-function'
import { type LLMBase } from './llm/llm-base'

// TODO: fix me
// export type ResolveFunction<TArgs extends z.ZodType, TReturn extends z.ZodType> = (
//   args: TArgs
// ) => Promise<z.infer<TReturn>>

export type ResolveFunction<TArgs extends z.ZodType, TReturn extends z.ZodType> = any

interface FunctionsDefinitionBase<TArgs extends z.ZodType, TReturn extends z.ZodType> {
  name: string
  description?: string
  args: TArgs
  returnType: TReturn
}

export interface InvokeFunctionDefinition<
  TArgs extends z.ZodType,
  TReturn extends z.ZodType,
  TResolve extends ResolveFunction<TArgs, TReturn>
> extends FunctionsDefinitionBase<TArgs, TReturn> {
  resolve: TResolve
}

export interface SynthesizedFunctionDefinition<TArgs extends z.ZodType, TReturn extends z.ZodType>
  extends FunctionsDefinitionBase<TArgs, TReturn> {}

export type FlappyFunctionDefinition<
  TArgs extends z.ZodType = z.ZodType,
  TReturn extends z.ZodType = z.ZodType,
  TResolve extends ResolveFunction<TArgs, TReturn> = ResolveFunction<TArgs, TReturn>
> = InvokeFunctionDefinition<TArgs, TReturn, TResolve> | SynthesizedFunctionDefinition<TArgs, TReturn>

export type FlappyFunction = SynthesizedFunction | InvokeFunction

/**
 * FlappyAgent Config
 */
export interface FlappyAgentConfig {
  /**
   * Which language model to use for inference.
   */
  llm: LLMBase

  /**
   * Which language model to use for planning.
   * If not specified, use `llm` instead.
   */
  llmPlaner?: LLMBase

  /**
   * Code interpreter could be used to execute code snippets in sandbox which are generated by language model.
   * If not specified, this feature will be disabled.
   */
  codeInterpreter?: 'python' | 'typescript'

  /**
   * List of functions that can be called by the agent or language model.
   */
  functions: FlappyFunction[]

  /**
   * Maximum number of retries when language model generation failed.
   * The default retries is 1.
   */
  retry?: number
}
